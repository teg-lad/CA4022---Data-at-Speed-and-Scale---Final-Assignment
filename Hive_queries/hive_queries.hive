-- This file contains all of the Hive code used to query the data.

-- Create the database/schema to create a table within.
CREATE SCHEMA IF NOT EXISTS CA4022_assignment_3;

-- Specify the database to use.
USE CA4022_assignment_3;

-- Delete the table if it exists so we can load a new one in (For testing).
DROP TABLE books;

-- Create a table with the listed columns. Tab separated
CREATE TABLE IF NOT EXISTS books (marketplace STRING, customer_id INT, review_id STRING, product_id STRING,
product_parent INT, product_title STRING, product_category STRING, rating INT, helpful_votes INT, total_votes INT)
COMMENT "Book reviews"
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "\t"
LINES TERMINATED BY "\n"
STORED AS TEXTFILE;

-- Read the data in from the local path given and overwrite it into the books table.
LOAD DATA LOCAL INPATH '/home/tegarta2/apache-hive-3.1.3-bin/assignment3/total_Books.tsv'
OVERWRITE INTO TABLE books;

Queries

-- Top rated products
SELECT product_title, COUNT(rating) AS RatingsCount FROM books
GROUP BY product_title
ORDER BY RatingsCount DESC
LIMIT 10;

-- Count of ratings
SELECT rating, COUNT(review_id) AS RatingsCount FROM books
GROUP BY rating
ORDER BY RatingsCount DESC
LIMIT 10;

-- Count of ratings per customer
SELECT customer_id, COUNT(review_id) AS RatingsCount FROM books
GROUP BY customer_id
ORDER BY RatingsCount DESC
LIMIT 10;

-- Average rating for each user
SELECT customer_id, AVG(rating) AS AverageRating FROM books
GROUP BY customer_id
ORDER BY AverageRating DESC
LIMIT 10;

-- Average rating for products with more than 100 reviews
SELECT product_title, AVG(rating) AS AverageRating, COUNT(rating) as RatingCount FROM books
GROUP BY product_title
HAVING RatingCount > 100
ORDER BY AverageRating DESC
LIMIT 10;

------------------------------------------------------------------------------------------------------------------------
-- Delete the table if it exists so we can load a new one in (For testing).
DROP TABLE videos;

-- Create a table with the listed columns. Tab separated.
CREATE TABLE IF NOT EXISTS videos (marketplace STRING, customer_id INT, review_id STRING, product_id STRING,
product_parent INT, product_title STRING, product_category STRING, rating INT, helpful_votes INT, total_votes INT)
COMMENT "Video DVD reviews"
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "\t"
LINES TERMINATED BY "\n"
STORED AS TEXTFILE;

-- Read the data in from the local path given and overwrite it into the videos table.
LOAD DATA LOCAL INPATH '/home/tegarta2/apache-hive-3.1.3-bin/assignment3/total_Video DVD.tsv'
OVERWRITE INTO TABLE videos;

Queries

-- Top rated products
SELECT product_title, COUNT(rating) AS RatingsCount FROM videos
GROUP BY product_title
ORDER BY RatingsCount DESC
LIMIT 10;

-- Count of ratings
SELECT rating, COUNT(review_id) AS RatingsCount FROM videos
GROUP BY rating
ORDER BY RatingsCount DESC
LIMIT 10;

-- Count of ratings per customer
SELECT customer_id, COUNT(review_id) AS RatingsCount FROM videos
GROUP BY customer_id
ORDER BY RatingsCount DESC
LIMIT 10;

-- Average rating for each user
SELECT customer_id, AVG(rating) AS AverageRating FROM videos
GROUP BY customer_id
ORDER BY AverageRating DESC
LIMIT 10;

-- Average rating for products with more than 100 reviews
SELECT product_title, AVG(rating) AS AverageRating, COUNT(rating) as RatingCount FROM videos
GROUP BY product_title
HAVING RatingCount > 100
ORDER BY AverageRating DESC
LIMIT 10;


------------------------------------------------------------------------------------------------------------------------
-- Delete the table if it exists so we can load a new one in (For testing).
DROP TABLE games;

-- Create a table with the listed columns. Tab separated
CREATE TABLE IF NOT EXISTS games (marketplace STRING, customer_id INT, review_id STRING, product_id STRING,
product_parent INT, product_title STRING, product_category STRING, rating INT, helpful_votes INT, total_votes INT)
COMMENT "Video game reviews"
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "\t"
LINES TERMINATED BY "\n"
STORED AS TEXTFILE;

-- Read the data in from the local path given and overwrite it into the games table.
LOAD DATA LOCAL INPATH '/home/tegarta2/apache-hive-3.1.3-bin/assignment3/total_Video Games.tsv'
OVERWRITE INTO TABLE games;

Queries

-- Top rated products
SELECT product_title, COUNT(rating) AS RatingsCount FROM games
GROUP BY product_title
ORDER BY RatingsCount DESC
LIMIT 10;

-- Count of ratings
SELECT rating, COUNT(review_id) AS RatingsCount FROM games
GROUP BY rating
ORDER BY RatingsCount DESC
LIMIT 10;

-- Count of ratings per customer
SELECT customer_id, COUNT(review_id) AS RatingsCount FROM games
GROUP BY customer_id
ORDER BY RatingsCount DESC
LIMIT 10;

-- Average rating for each user
SELECT customer_id, AVG(rating) AS AverageRating FROM games
GROUP BY customer_id
ORDER BY AverageRating DESC
LIMIT 10;

-- Average rating for products with more than 100 reviews
SELECT product_title, AVG(rating) AS AverageRating, COUNT(rating) as RatingCount FROM games
GROUP BY product_title
HAVING RatingCount > 100
ORDER BY AverageRating DESC
LIMIT 10;
